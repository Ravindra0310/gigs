// Generated by view binder compiler. Do not edit!
package com.example.gigs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gigs.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AutoCompleteTextView autoCompleteTextView;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final TextInputLayout edittextName;

  @NonNull
  public final TextInputLayout edittextNumber;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextInputEditText textNumber;

  @NonNull
  public final TextInputEditText textname;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull AutoCompleteTextView autoCompleteTextView, @NonNull Button buttonSave,
      @NonNull TextInputLayout edittextName, @NonNull TextInputLayout edittextNumber,
      @NonNull TextInputLayout textInputLayout, @NonNull TextInputEditText textNumber,
      @NonNull TextInputEditText textname) {
    this.rootView = rootView;
    this.autoCompleteTextView = autoCompleteTextView;
    this.buttonSave = buttonSave;
    this.edittextName = edittextName;
    this.edittextNumber = edittextNumber;
    this.textInputLayout = textInputLayout;
    this.textNumber = textNumber;
    this.textname = textname;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoCompleteTextView;
      AutoCompleteTextView autoCompleteTextView = ViewBindings.findChildViewById(rootView, id);
      if (autoCompleteTextView == null) {
        break missingId;
      }

      id = R.id.button_save;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.edittext_name;
      TextInputLayout edittextName = ViewBindings.findChildViewById(rootView, id);
      if (edittextName == null) {
        break missingId;
      }

      id = R.id.edittext_number;
      TextInputLayout edittextNumber = ViewBindings.findChildViewById(rootView, id);
      if (edittextNumber == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.text_number;
      TextInputEditText textNumber = ViewBindings.findChildViewById(rootView, id);
      if (textNumber == null) {
        break missingId;
      }

      id = R.id.textname;
      TextInputEditText textname = ViewBindings.findChildViewById(rootView, id);
      if (textname == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, autoCompleteTextView, buttonSave,
          edittextName, edittextNumber, textInputLayout, textNumber, textname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
